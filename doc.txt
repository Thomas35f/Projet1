Descriptif du projet :

- Logiciel de virtualisation utilisé : Oracle VM VirtualBox
- Iso utilisé : Ubuntu 20.4

Une fois dans la VM:
-Installation des packages manquants et upgrade de la version d'Ubuntu.

Avant de commencer les installations, il fallait d'abord avoir une vue d'ensemble de tout l'environnement à installer. J'ai donc fait des schémas et je me suis 
renseigné sur comment faire exister et faire co-exister tous ces composants.

Après cela, j'ai décidé d'installer les composants en manuel. L'installation de Jenkins s'est bien passée mais celle de Sonarqube a été plus fastidieuse. 
Le problème était le port que devait emprunter Sonarqube (9000). Celui-ci restait systématiquement fermé. Même en forçant son ouverture, celui-ci restait fermé. 
La commande 'sudo netstat -tulpn | grep LISTEN' me permettait de voir les ports ouverts.

Au final, j'ai opté pour une autre solution : installer sonarqube via Docker. L'idée ne m'était pas venu à la base mais c'est en cherchant une solution que j'ai 
pu trouver l'idée de Docker.

L'installation s'est faite sans soucis.

Entre temps, j'ai installé Nginx ainsi que MariaDB.

Puis, il fut temps de découvrir les composants que sont Jenkins et Sonarqube afin de les apprivoiser au mieux. Après quelques tests sur Jenkins, je me suis mis à
la création du mini-site. 

Le site est fait en HTML et CSS et PHP. Bootsrap a été utilisé pour le css et le responsive. Aucun framework n'a été utilisé pour faire le site. Néanmoins, un 
souci est arrivé quand il a fallu mettre le site sur Nginx. Beaucoup d'erreurs sont arrivés : erreur 403, 404, 405. Certaines m'ont donné plus de soucis comme la 
405 qui ne me permettait pas de faire les requêtes php. Au final, j'ai dû changer des éléments dans les fichhiers nginx, nottament au niveau de la location et du 
port.

Suite à cela, il était temps de connecter les composants entre eux, le site étant l'élément déclencheur. Ainsi, après avoir fait le site sur mon ordinateur, je l'ai
passé dans la VM de par les dossiers partagés. Puis, je l'ai mis sur Github. Il fallait maintenant commencer la connexion entre les composants.

J'ai commencé par me renseigner sur Sonarqube. Ainsi, j'ai vu plus en détail comment fonctionnait les pipelines et j'ai commencé la jointure. Il fallait d'abord 
créer le projet sur Sonarqube puis créer le pipeline. Par la suite, il fallait créer un webhook sur Github. Enfin, j'ai crée un fichier JenkinsFile ainsi qu'un fichier 
SonarProperties, ces deux fichiers étant ensuite attachés au dossier du site.

Ainsi, le pipeline fonctionnait bien. Chaque commit était pris en compte et les analyses du code sur SonarQube se faisaient bien.
